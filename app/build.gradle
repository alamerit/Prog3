apply plugin: 'com.android.application'
//apply plugin: 'io.fabric'

android {
    def keystorePropertiesFile = file('keystore.properties')
    def isKeystoreExists = false
    if(keystorePropertiesFile.exists()) {
        def keystoreProperties = new Properties()
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
        def keystoreFile = file(keystoreProperties['storeFile'])
        if(keystoreFile.exists()) {
            isKeystoreExists = true
            def keystorePassword = keystoreProperties['storePassword']
            signingConfigs {
                release {
                    keyAlias keystoreProperties['release.keyAlias']
                    keyPassword keystoreProperties['release.keyPassword']
                    storeFile keystoreFile
                    storePassword keystorePassword
                }
            }
        }
    }

    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "geekbrains.ru.lesson5_sugarorm"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }
}

dependencies {
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.2'
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'com.squareup.retrofit2:retrofit:2.6.2'
    implementation 'com.squareup.retrofit2:converter-gson:2.6.1'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.6'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'com.github.satyan:sugar:1.4'
    implementation 'android.arch.persistence.room:runtime:1.1.1'
    annotationProcessor 'android.arch.persistence.room:compiler:1.1.1'
    implementation 'com.google.dagger:dagger:2.10'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.10'
//    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'


    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:3.1.0'
    testAnnotationProcessor 'com.google.dagger:dagger-compiler:2.10'

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'org.mockito:mockito-android:3.1.0'
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:3.3.0'

//    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
//    androidTestImplementation 'androidx.test:core:1.2.1-alpha02'
//    androidTestImplementation 'androidx.arch.core:core-testing:2.1.0'
//    androidTestImplementation 'androidx.room:room-testing:2.2.0-rc01'

    androidTestAnnotationProcessor 'com.google.dagger:dagger-compiler:2.10'
//    androidTestImplementation  'org.mockito:mockito-junit-jupiter:3.1.0'
}
